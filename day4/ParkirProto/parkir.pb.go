// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: parkir.proto

package parkir

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parkir_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_parkir_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_parkir_proto_rawDescGZIP(), []int{0}
}

type Validation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Check bool   `protobuf:"varint,2,opt,name=check,proto3" json:"check,omitempty"`
}

func (x *Validation) Reset() {
	*x = Validation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parkir_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Validation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Validation) ProtoMessage() {}

func (x *Validation) ProtoReflect() protoreflect.Message {
	mi := &file_parkir_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Validation.ProtoReflect.Descriptor instead.
func (*Validation) Descriptor() ([]byte, []int) {
	return file_parkir_proto_rawDescGZIP(), []int{1}
}

func (x *Validation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Validation) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

type Keluar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TanggalKeluar string `protobuf:"bytes,2,opt,name=tanggalKeluar,proto3" json:"tanggalKeluar,omitempty"`
	PlatNo        string `protobuf:"bytes,3,opt,name=platNo,proto3" json:"platNo,omitempty"`
	Tipe          string `protobuf:"bytes,4,opt,name=tipe,proto3" json:"tipe,omitempty"`
}

func (x *Keluar) Reset() {
	*x = Keluar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parkir_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Keluar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keluar) ProtoMessage() {}

func (x *Keluar) ProtoReflect() protoreflect.Message {
	mi := &file_parkir_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keluar.ProtoReflect.Descriptor instead.
func (*Keluar) Descriptor() ([]byte, []int) {
	return file_parkir_proto_rawDescGZIP(), []int{2}
}

func (x *Keluar) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Keluar) GetTanggalKeluar() string {
	if x != nil {
		return x.TanggalKeluar
	}
	return ""
}

func (x *Keluar) GetPlatNo() string {
	if x != nil {
		return x.PlatNo
	}
	return ""
}

func (x *Keluar) GetTipe() string {
	if x != nil {
		return x.Tipe
	}
	return ""
}

type Masuk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Tanggalmasuk string `protobuf:"bytes,2,opt,name=tanggalmasuk,proto3" json:"tanggalmasuk,omitempty"`
}

func (x *Masuk) Reset() {
	*x = Masuk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parkir_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Masuk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Masuk) ProtoMessage() {}

func (x *Masuk) ProtoReflect() protoreflect.Message {
	mi := &file_parkir_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Masuk.ProtoReflect.Descriptor instead.
func (*Masuk) Descriptor() ([]byte, []int) {
	return file_parkir_proto_rawDescGZIP(), []int{3}
}

func (x *Masuk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Masuk) GetTanggalmasuk() string {
	if x != nil {
		return x.Tanggalmasuk
	}
	return ""
}

type Bill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tarif int32 `protobuf:"varint,3,opt,name=tarif,proto3" json:"tarif,omitempty"`
}

func (x *Bill) Reset() {
	*x = Bill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_parkir_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bill) ProtoMessage() {}

func (x *Bill) ProtoReflect() protoreflect.Message {
	mi := &file_parkir_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bill.ProtoReflect.Descriptor instead.
func (*Bill) Descriptor() ([]byte, []int) {
	return file_parkir_proto_rawDescGZIP(), []int{4}
}

func (x *Bill) GetTarif() int32 {
	if x != nil {
		return x.Tarif
	}
	return 0
}

var File_parkir_proto protoreflect.FileDescriptor

var file_parkir_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x32, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x6a, 0x0a, 0x06, 0x4b,
	0x65, 0x6c, 0x75, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c,
	0x4b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61,
	0x6e, 0x67, 0x67, 0x61, 0x6c, 0x4b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x74, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x74, 0x4e, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x65, 0x22, 0x3b, 0x0a, 0x05, 0x4d, 0x61, 0x73, 0x75, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x6d, 0x61, 0x73, 0x75, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6e, 0x67, 0x67, 0x61, 0x6c, 0x6d,
	0x61, 0x73, 0x75, 0x6b, 0x22, 0x1c, 0x0a, 0x04, 0x42, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x61, 0x72, 0x69, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x72,
	0x69, 0x66, 0x32, 0x75, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x1f, 0x0a, 0x0b, 0x4d, 0x61, 0x73, 0x75, 0x6b, 0x50, 0x61, 0x72, 0x6b, 0x69, 0x72, 0x12,
	0x06, 0x2e, 0x4d, 0x61, 0x73, 0x75, 0x6b, 0x1a, 0x06, 0x2e, 0x4d, 0x61, 0x73, 0x75, 0x6b, 0x22,
	0x00, 0x12, 0x20, 0x0a, 0x0c, 0x4b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x50, 0x61, 0x72, 0x6b, 0x69,
	0x72, 0x12, 0x07, 0x2e, 0x4b, 0x65, 0x6c, 0x75, 0x61, 0x72, 0x1a, 0x05, 0x2e, 0x42, 0x69, 0x6c,
	0x6c, 0x22, 0x00, 0x12, 0x24, 0x0a, 0x06, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x0b, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0b, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_parkir_proto_rawDescOnce sync.Once
	file_parkir_proto_rawDescData = file_parkir_proto_rawDesc
)

func file_parkir_proto_rawDescGZIP() []byte {
	file_parkir_proto_rawDescOnce.Do(func() {
		file_parkir_proto_rawDescData = protoimpl.X.CompressGZIP(file_parkir_proto_rawDescData)
	})
	return file_parkir_proto_rawDescData
}

var file_parkir_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_parkir_proto_goTypes = []interface{}{
	(*Empty)(nil),      // 0: Empty
	(*Validation)(nil), // 1: Validation
	(*Keluar)(nil),     // 2: Keluar
	(*Masuk)(nil),      // 3: Masuk
	(*Bill)(nil),       // 4: Bill
}
var file_parkir_proto_depIdxs = []int32{
	3, // 0: ParkirArea.MasukParkir:input_type -> Masuk
	2, // 1: ParkirArea.KeluarParkir:input_type -> Keluar
	1, // 2: ParkirArea.FindId:input_type -> Validation
	3, // 3: ParkirArea.MasukParkir:output_type -> Masuk
	4, // 4: ParkirArea.KeluarParkir:output_type -> Bill
	1, // 5: ParkirArea.FindId:output_type -> Validation
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_parkir_proto_init() }
func file_parkir_proto_init() {
	if File_parkir_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_parkir_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parkir_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Validation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parkir_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Keluar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parkir_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Masuk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_parkir_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_parkir_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_parkir_proto_goTypes,
		DependencyIndexes: file_parkir_proto_depIdxs,
		MessageInfos:      file_parkir_proto_msgTypes,
	}.Build()
	File_parkir_proto = out.File
	file_parkir_proto_rawDesc = nil
	file_parkir_proto_goTypes = nil
	file_parkir_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ParkirAreaClient is the client API for ParkirArea service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ParkirAreaClient interface {
	MasukParkir(ctx context.Context, in *Masuk, opts ...grpc.CallOption) (*Masuk, error)
	KeluarParkir(ctx context.Context, in *Keluar, opts ...grpc.CallOption) (*Bill, error)
	FindId(ctx context.Context, in *Validation, opts ...grpc.CallOption) (*Validation, error)
}

type parkirAreaClient struct {
	cc grpc.ClientConnInterface
}

func NewParkirAreaClient(cc grpc.ClientConnInterface) ParkirAreaClient {
	return &parkirAreaClient{cc}
}

func (c *parkirAreaClient) MasukParkir(ctx context.Context, in *Masuk, opts ...grpc.CallOption) (*Masuk, error) {
	out := new(Masuk)
	err := c.cc.Invoke(ctx, "/ParkirArea/MasukParkir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parkirAreaClient) KeluarParkir(ctx context.Context, in *Keluar, opts ...grpc.CallOption) (*Bill, error) {
	out := new(Bill)
	err := c.cc.Invoke(ctx, "/ParkirArea/KeluarParkir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *parkirAreaClient) FindId(ctx context.Context, in *Validation, opts ...grpc.CallOption) (*Validation, error) {
	out := new(Validation)
	err := c.cc.Invoke(ctx, "/ParkirArea/FindId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ParkirAreaServer is the server API for ParkirArea service.
type ParkirAreaServer interface {
	MasukParkir(context.Context, *Masuk) (*Masuk, error)
	KeluarParkir(context.Context, *Keluar) (*Bill, error)
	FindId(context.Context, *Validation) (*Validation, error)
}

// UnimplementedParkirAreaServer can be embedded to have forward compatible implementations.
type UnimplementedParkirAreaServer struct {
}

func (*UnimplementedParkirAreaServer) MasukParkir(context.Context, *Masuk) (*Masuk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MasukParkir not implemented")
}
func (*UnimplementedParkirAreaServer) KeluarParkir(context.Context, *Keluar) (*Bill, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeluarParkir not implemented")
}
func (*UnimplementedParkirAreaServer) FindId(context.Context, *Validation) (*Validation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindId not implemented")
}

func RegisterParkirAreaServer(s *grpc.Server, srv ParkirAreaServer) {
	s.RegisterService(&_ParkirArea_serviceDesc, srv)
}

func _ParkirArea_MasukParkir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Masuk)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParkirAreaServer).MasukParkir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ParkirArea/MasukParkir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParkirAreaServer).MasukParkir(ctx, req.(*Masuk))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParkirArea_KeluarParkir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Keluar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParkirAreaServer).KeluarParkir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ParkirArea/KeluarParkir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParkirAreaServer).KeluarParkir(ctx, req.(*Keluar))
	}
	return interceptor(ctx, in, info, handler)
}

func _ParkirArea_FindId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Validation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ParkirAreaServer).FindId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ParkirArea/FindId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ParkirAreaServer).FindId(ctx, req.(*Validation))
	}
	return interceptor(ctx, in, info, handler)
}

var _ParkirArea_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ParkirArea",
	HandlerType: (*ParkirAreaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MasukParkir",
			Handler:    _ParkirArea_MasukParkir_Handler,
		},
		{
			MethodName: "KeluarParkir",
			Handler:    _ParkirArea_KeluarParkir_Handler,
		},
		{
			MethodName: "FindId",
			Handler:    _ParkirArea_FindId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "parkir.proto",
}
